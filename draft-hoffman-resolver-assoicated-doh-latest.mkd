---
title: Associating a DoH Server with a Resolver
abbrev: Resolver Associated DoH
docname: draft-hoffman-resolver-associated-doh

stand_alone: true

ipr: trust200902
kw: Internet-Draft
cat: std

pi:
  toc: yes
  tocdepth: 4
  sortrefs: yes
  symrefs: yes

author:
 -
   ins: P. Hoffman
   name: Paul Hoffman
   org: ICANN
   email: paul.hoffman@icann.org

normative:
  I-D.nottingham-rfc5785bis:
  RFC1035:
  RFC2119:
  RFC6570:
  RFC7858:
  RFC8174:
  RFC8484:
  SUDN:
    title: "Special-Use Domain Names"
    target: "https://www.iana.org/assignments/special-use-domain-names/"

informative:
  RFC6761:
  RFC6891:

--- abstract

Browsers and web applications may want to know if there are one or more DoH servers
associated with the DNS recursive resolver that the operating system is already using.
This would allow them to get DNS responses from a resolver that the user
(or, more likely, the user's network administrator) has already chosen.
This document describes a protocol for a resolver to tell a client
what its associated DoH servers are.

--- middle

# Introduction

DoH {{RFC8484}} requires that one or more DoH servers be configured
for the DoH client. That document does not say how the DoH servers are
found, nor how to select from a list of possible DoH servers,
nor what the user interface (UI) for the configuration should be.

There is a use case for browsers and web applications who have one or more currently-configured 
DNS recursive resolvers wanting to use DoH for DNS resolution instead.
For example, the recursive resolver knows how to give correct answers to DNS
queries that contain names that are only resolvable in the local context.
Users typically configure their DNS recursive resolvers with through manual
configuration (such as manually editing a /etc/named.conf file) or through
automatic configuration from a protocol such as DHCP.

The client that wants to change from its currently-configured Do53 recursive
resolver(s) to one or more DoH servers
 might be the stub resolver in an operating system, although at this
time it is rare that such stub resolvers can use DoH.
A much more likely use case is a browser or web application that is getting name resolution
through the stub resolver on the computer on which it is running.
The user of the browser might have a preference for using a DoH server,
and they might need to use a DoH server that is associated with the resolver that the
computer is currently using so that its queries for non-global names are answered correctly.
They may also be required to use only resolvers that are approved by their organization's
network operators.

To address these use cases, this document defines a new special use domain name
(described in {{RFC6761}}) and a well-known URI {{I-D.nottingham-rfc5785bis}}.
When combined, they allow an application that can
use the POSIX "getaddrinfo()" function and resolve HTTP and HTTPS URLs to get a list
of the DoH servers associated with at least one of the resolvers being used by the operating system
on the system on which the application is being run.

The design choices for this protocol, particularly earlier designs that were
deemed unusable, are described in {{design_choices}}.

# Terminology

In this document, "DoT" is used to indicate DNS over TLS as defined in {{RFC7858}}.

In this document, "Do53" is used to indicate DNS over UDP or TCP as defined in {{RFC1035}}.

"DoH client" and "DoH server" are defined in {{RFC8484}}.

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY",
and "OPTIONAL" in this document are to be interpreted as described in
BCP 14 {{RFC2119}} {{RFC8174}} when, and only when, they
appear in all capitals, as shown here.

# Finding the DoH Servers Associated with a Resolver

To find the DoH Servers associated with a resolver, an application uses
a special use domain name that causes a resolver to return its IP addresses.
It uses those IP addresses as part of a well-known URI to find out the URI templates {{RFC6570}}
to use for the DoH server(s) associated with the resolver.

## Finding the IP Addresses of a Resolver

A browser is able to use the POSIX "getaddrinfo()" function to convert host names into
IP addresses through the stub resolver in the operating system on which it is running.
It can also send queries to a resolver, but it would need to have the address of that resolver first.
The same is true for web applications.

In order for a browser (or other application) to find the address of the resolver that the
operating system is using, it uses the POSIX "getaddrinfo()" function (or some equivalent)
with the special use name "resolver-addresses.arpa".
When a resolver that understands this special use domain name receives a query for either
resolver-addresses.arpa/IN/A or resolver-addresses.arpa/IN/AAAA,
it returns its own IP addresses in the answer.

## Finding the DoH Servers Associated with a Resolver

To find the DoH servers associated with a resolver, the client uses the addresses
returned from the query to resolver-addresses.arpa and sends a query to

~~~
https://IPADDRESSGOESHERE/.well-known/doh-servers-associated/
~~~

The resolver replies with its associated DoH servers as URI Templates {{RFC6570}}.

\[\[ Need to describe the media types; likely JSON \]\]

\[\[ Need to talk about what a response with an empty list means \]\]

\[\[ Need to talk about what happens if authentication fails. This is complicated
by the fact that the application doesn't know if the OS-to-resolver communication
is authenticated. \]\]

\[\[ Need to talk about HTTP caching \]\]

A client MUST try to establish a new list of DoH servers associated with
a resolver every time the configured resolver in the operating system changes.


# User Interface

For this protocol to be useful in a browser, the browser needs to have an entry in
its configuration interface where the allowed DoH servers are listed that indicates
that a DoH server from the configured Do53 or DoT resolver is allowed. That wording
might say something like "DoH server associated with my current resolver".

<!--
(or "servidor DoH asociado con mi resolución actual" or
"serveur DoH associé à mon résolveur actuel").
-->


# Design Choices {#design_choices}

The primary use case for this protocol is a browser or web application that is getting name
resolution through the stub resolver on the computer on which it is running
wanting to switch its name resolution to DoH.
A secondary use case is an OS that wants to make a similar switch.

An earlier design suggestion was to use a new RRtype with a query to ./IN/NEWRRTYPE.
However, it was pointed out that this would not work going through stub resolvers that
validate DNSSEC.

An earlier design suggestion was to use DHCP to tell the OS the DoH servers that
the stub resolver might use. That protocol is orthogonal to the one in this document
in that it addresses a different use case. If both the protocol in this document and
a DHCP-based protocol are standardized, they could co-exist. However, there is
no current mechanism for a stub resolver to tell a browser, or a web application, what DoH server
the stub resolver is using, so DoH configuration in the stub resolver would not
prevent the browser from trying to find a DoH server on its own.

An earlier design suggestion was to use an EDNS0 {{RFC6891}} extension. 
The design chosen in this document meets the use case better because applications cannot
communicate EDNS0 extensions to the stub resolver.

An earlier design suggestion used a special use domain name of resolver-associated-doh.arpa
with an RRtype of TXT.
The design chosen in this document meets the use case better because applications cannot
query the stub resolver for types other than address records.


# IANA Considerations {#ianacons}

IANA will record the domain name "resolver-addresses.arpa." in the
"Special-Use Domain Names" registry {{SUDN}}.
IANA MUST NOT delegate resolver-addresses.arpa in the .arpa zone.

\[\[ When this document settles down, need to register
".well-known/doh-servers-associated" as specified in {{I-D.nottingham-rfc5785bis}}. \]\]


# Privacy Considerations {#privconsid}

Allowing a user to use DoH instead of Do53 increases communication privacy because
of the TLS protection.

When a Do53 or DoT server indicates that a particular DoH server is associated with it,
the client might assume that the DoH server has the same information privacy policies as
the Do53 or DoT server.
Therefore, a Do53 or DoT server SHOULD NOT recommend a DoH server unless that DoH server
has the same (or better) information privacy policy as the Do53 or DoT server.


# Security Considerations {#seccons}

There is currently no way for an application to know whether the operating system's stub
resolver is using a transport that assures data integrity such as DoT. 

Even is an application could determine the use of a transport like DoT, the application
would also need to know whether the transport was authenticated or was simply chosen
opportunistically.

--- back

# Acknowledgments
{:numbered="false"}

The use case in this document was inspired by discussions and the DRIU BoF
at IETF 102 and later in the DNSOP Working Group.
Vladimír Cunat, Philip Homburg, and Shumon Huque offered useful advice
to greatly improve an early version of the protocol. 
